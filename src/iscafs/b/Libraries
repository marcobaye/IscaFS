LIBRARY "<PCFNLib$Dir>.BasAsm.ARMFuncs"
LIBRARY "<PCFNLib$Dir>.BasAsm.ARMFuncsMB"
LIBRARY "<PCFNLib$Dir>.BasAsm.SWINums"
LIBRARY "<PCFNLib$Dir>.BasAsm.Workspace"
LIBRARY "<PCFNLib$Dir>.BasAsm.AsmConsts"
LIBRARY "<PCFNLib$Dir>.BasAsm.WimpMsgs"
REM LIBRARY "<PCFNLib$Dir>.BasAsm.DebugFns"
LIBRARY "<PCFNLib$Dir>.BasAsm.Debug"
LIBRARY "<PCFNLib$Dir>.BasAsm.Service"
LIBRARY "<PCFNLib$Dir>.BasAsm.ModFuncs"

PROCPCFN_init_ARMFuncs
PROCPCFN_init_AsmConsts
PROCPCFN_init_SWINums
PROCPCFN_init_WimpMsgs
REM PROCPCFN_init_DebugFns
PROCPCFN_init_Service
PROCPCFN_init_ModFuncs


REM We'll also stick some useful functions in here...

IF 0 THEN

DEF FNrnd(reg%)
[OPT pass%
ldr reg%,[r12,#random_seed]
REM MB, 07 Sep 2004 - this is not very random.
REM If (random_seed AND 0x1f) ever results in 0, the new random seed will be 0.
REM And then it stays that way forever...
REM My new algo (if you want to call it that) is not very random either, but
REM it gives a different value each time it is called ;-)
REM old:
REM eor reg%,reg%,reg%,ror reg%
REM eor reg%,reg%,reg%,lsr #7
REM new:
add reg%, reg%, #1
REM MB end
str reg%,[r12,#random_seed]
]
=0

ENDIF
